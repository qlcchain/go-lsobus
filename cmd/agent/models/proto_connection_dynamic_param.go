// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtoConnectionDynamicParam proto connection dynamic param
//
// swagger:model protoConnectionDynamicParam
type ProtoConnectionDynamicParam struct {

	// addition
	Addition float32 `json:"Addition,omitempty"`

	// bandwidth
	Bandwidth string `json:"bandwidth,omitempty"`

	// billing type
	BillingType string `json:"billingType,omitempty"`

	// billing unit
	BillingUnit string `json:"billingUnit,omitempty"`

	// connection name
	ConnectionName string `json:"connectionName,omitempty"`

	// currency
	Currency string `json:"currency,omitempty"`

	// end time
	EndTime string `json:"endTime,omitempty"`

	// end time str time str
	EndTimeStrTimeStr string `json:"endTimeStrTimeStr,omitempty"`

	// order Id
	OrderID string `json:"orderId,omitempty"`

	// payment type
	PaymentType string `json:"paymentType,omitempty"`

	// price
	Price float32 `json:"price,omitempty"`

	// quote Id
	QuoteID string `json:"quoteId,omitempty"`

	// quote item Id
	QuoteItemID string `json:"quoteItemId,omitempty"`

	// service class
	ServiceClass string `json:"serviceClass,omitempty"`

	// start time
	StartTime string `json:"startTime,omitempty"`

	// start time str
	StartTimeStr string `json:"startTimeStr,omitempty"`
}

// Validate validates this proto connection dynamic param
func (m *ProtoConnectionDynamicParam) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtoConnectionDynamicParam) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtoConnectionDynamicParam) UnmarshalBinary(b []byte) error {
	var res ProtoConnectionDynamicParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
