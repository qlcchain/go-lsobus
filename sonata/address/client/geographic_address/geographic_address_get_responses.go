// Code generated by go-swagger; DO NOT EDIT.

package geographic_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-lsobus/sonata/address/models"
)

// GeographicAddressGetReader is a Reader for the GeographicAddressGet structure.
type GeographicAddressGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GeographicAddressGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGeographicAddressGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGeographicAddressGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGeographicAddressGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGeographicAddressGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGeographicAddressGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGeographicAddressGetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGeographicAddressGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGeographicAddressGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGeographicAddressGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGeographicAddressGetOK creates a GeographicAddressGetOK with default headers values
func NewGeographicAddressGetOK() *GeographicAddressGetOK {
	return &GeographicAddressGetOK{}
}

/*GeographicAddressGetOK handles this case with default header values.

Ok
*/
type GeographicAddressGetOK struct {
	Payload *models.GeographicAddress
}

func (o *GeographicAddressGetOK) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetOK  %+v", 200, o.Payload)
}

func (o *GeographicAddressGetOK) GetPayload() *models.GeographicAddress {
	return o.Payload
}

func (o *GeographicAddressGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeographicAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetBadRequest creates a GeographicAddressGetBadRequest with default headers values
func NewGeographicAddressGetBadRequest() *GeographicAddressGetBadRequest {
	return &GeographicAddressGetBadRequest{}
}

/*GeographicAddressGetBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type GeographicAddressGetBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetBadRequest  %+v", 400, o.Payload)
}

func (o *GeographicAddressGetBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetUnauthorized creates a GeographicAddressGetUnauthorized with default headers values
func NewGeographicAddressGetUnauthorized() *GeographicAddressGetUnauthorized {
	return &GeographicAddressGetUnauthorized{}
}

/*GeographicAddressGetUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type GeographicAddressGetUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetUnauthorized  %+v", 401, o.Payload)
}

func (o *GeographicAddressGetUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetForbidden creates a GeographicAddressGetForbidden with default headers values
func NewGeographicAddressGetForbidden() *GeographicAddressGetForbidden {
	return &GeographicAddressGetForbidden{}
}

/*GeographicAddressGetForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type GeographicAddressGetForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetForbidden) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetForbidden  %+v", 403, o.Payload)
}

func (o *GeographicAddressGetForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetNotFound creates a GeographicAddressGetNotFound with default headers values
func NewGeographicAddressGetNotFound() *GeographicAddressGetNotFound {
	return &GeographicAddressGetNotFound{}
}

/*GeographicAddressGetNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type GeographicAddressGetNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetNotFound) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetNotFound  %+v", 404, o.Payload)
}

func (o *GeographicAddressGetNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetMethodNotAllowed creates a GeographicAddressGetMethodNotAllowed with default headers values
func NewGeographicAddressGetMethodNotAllowed() *GeographicAddressGetMethodNotAllowed {
	return &GeographicAddressGetMethodNotAllowed{}
}

/*GeographicAddressGetMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type GeographicAddressGetMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GeographicAddressGetMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetUnprocessableEntity creates a GeographicAddressGetUnprocessableEntity with default headers values
func NewGeographicAddressGetUnprocessableEntity() *GeographicAddressGetUnprocessableEntity {
	return &GeographicAddressGetUnprocessableEntity{}
}

/*GeographicAddressGetUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error
*/
type GeographicAddressGetUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GeographicAddressGetUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetInternalServerError creates a GeographicAddressGetInternalServerError with default headers values
func NewGeographicAddressGetInternalServerError() *GeographicAddressGetInternalServerError {
	return &GeographicAddressGetInternalServerError{}
}

/*GeographicAddressGetInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type GeographicAddressGetInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetInternalServerError  %+v", 500, o.Payload)
}

func (o *GeographicAddressGetInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeographicAddressGetServiceUnavailable creates a GeographicAddressGetServiceUnavailable with default headers values
func NewGeographicAddressGetServiceUnavailable() *GeographicAddressGetServiceUnavailable {
	return &GeographicAddressGetServiceUnavailable{}
}

/*GeographicAddressGetServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type GeographicAddressGetServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *GeographicAddressGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /geographicAddress/{GeographicAddressId}][%d] geographicAddressGetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GeographicAddressGetServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *GeographicAddressGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
