// Code generated by go-swagger; DO NOT EDIT.

package cancel_product_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-virtual-lsobus/sonata/order/models"
)

// CancelProductOrderCreateReader is a Reader for the CancelProductOrderCreate structure.
type CancelProductOrderCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelProductOrderCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCancelProductOrderCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelProductOrderCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCancelProductOrderCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCancelProductOrderCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCancelProductOrderCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCancelProductOrderCreateMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCancelProductOrderCreateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCancelProductOrderCreateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCancelProductOrderCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCancelProductOrderCreateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCancelProductOrderCreateCreated creates a CancelProductOrderCreateCreated with default headers values
func NewCancelProductOrderCreateCreated() *CancelProductOrderCreateCreated {
	return &CancelProductOrderCreateCreated{}
}

/*CancelProductOrderCreateCreated handles this case with default header values.

Created
*/
type CancelProductOrderCreateCreated struct {
	Payload *models.CancelProductOrder
}

func (o *CancelProductOrderCreateCreated) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateCreated  %+v", 201, o.Payload)
}

func (o *CancelProductOrderCreateCreated) GetPayload() *models.CancelProductOrder {
	return o.Payload
}

func (o *CancelProductOrderCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CancelProductOrder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateBadRequest creates a CancelProductOrderCreateBadRequest with default headers values
func NewCancelProductOrderCreateBadRequest() *CancelProductOrderCreateBadRequest {
	return &CancelProductOrderCreateBadRequest{}
}

/*CancelProductOrderCreateBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type CancelProductOrderCreateBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateBadRequest  %+v", 400, o.Payload)
}

func (o *CancelProductOrderCreateBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateUnauthorized creates a CancelProductOrderCreateUnauthorized with default headers values
func NewCancelProductOrderCreateUnauthorized() *CancelProductOrderCreateUnauthorized {
	return &CancelProductOrderCreateUnauthorized{}
}

/*CancelProductOrderCreateUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type CancelProductOrderCreateUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *CancelProductOrderCreateUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateForbidden creates a CancelProductOrderCreateForbidden with default headers values
func NewCancelProductOrderCreateForbidden() *CancelProductOrderCreateForbidden {
	return &CancelProductOrderCreateForbidden{}
}

/*CancelProductOrderCreateForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type CancelProductOrderCreateForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateForbidden  %+v", 403, o.Payload)
}

func (o *CancelProductOrderCreateForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateNotFound creates a CancelProductOrderCreateNotFound with default headers values
func NewCancelProductOrderCreateNotFound() *CancelProductOrderCreateNotFound {
	return &CancelProductOrderCreateNotFound{}
}

/*CancelProductOrderCreateNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type CancelProductOrderCreateNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateNotFound  %+v", 404, o.Payload)
}

func (o *CancelProductOrderCreateNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateMethodNotAllowed creates a CancelProductOrderCreateMethodNotAllowed with default headers values
func NewCancelProductOrderCreateMethodNotAllowed() *CancelProductOrderCreateMethodNotAllowed {
	return &CancelProductOrderCreateMethodNotAllowed{}
}

/*CancelProductOrderCreateMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type CancelProductOrderCreateMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CancelProductOrderCreateMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateRequestTimeout creates a CancelProductOrderCreateRequestTimeout with default headers values
func NewCancelProductOrderCreateRequestTimeout() *CancelProductOrderCreateRequestTimeout {
	return &CancelProductOrderCreateRequestTimeout{}
}

/*CancelProductOrderCreateRequestTimeout handles this case with default header values.

Request Time-out

List of supported error codes:
- 63: Request time-out
*/
type CancelProductOrderCreateRequestTimeout struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateRequestTimeout  %+v", 408, o.Payload)
}

func (o *CancelProductOrderCreateRequestTimeout) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateUnprocessableEntity creates a CancelProductOrderCreateUnprocessableEntity with default headers values
func NewCancelProductOrderCreateUnprocessableEntity() *CancelProductOrderCreateUnprocessableEntity {
	return &CancelProductOrderCreateUnprocessableEntity{}
}

/*CancelProductOrderCreateUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error





 - code: 100
message: externalId must be provided
description:


 - code: 101
message: externalId does not match productOrderId
description:


 - code: 102
message: Product order state is not compliant with this request
description:
*/
type CancelProductOrderCreateUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CancelProductOrderCreateUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateInternalServerError creates a CancelProductOrderCreateInternalServerError with default headers values
func NewCancelProductOrderCreateInternalServerError() *CancelProductOrderCreateInternalServerError {
	return &CancelProductOrderCreateInternalServerError{}
}

/*CancelProductOrderCreateInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type CancelProductOrderCreateInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *CancelProductOrderCreateInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelProductOrderCreateServiceUnavailable creates a CancelProductOrderCreateServiceUnavailable with default headers values
func NewCancelProductOrderCreateServiceUnavailable() *CancelProductOrderCreateServiceUnavailable {
	return &CancelProductOrderCreateServiceUnavailable{}
}

/*CancelProductOrderCreateServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type CancelProductOrderCreateServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *CancelProductOrderCreateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /cancelProductOrder][%d] cancelProductOrderCreateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CancelProductOrderCreateServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *CancelProductOrderCreateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
