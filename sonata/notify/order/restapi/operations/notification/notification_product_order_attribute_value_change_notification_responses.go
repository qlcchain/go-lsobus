// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-virtual-lsobus/sonata/notify/order/models"
)

// NotificationProductOrderAttributeValueChangeNotificationNoContentCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationNoContent
const NotificationProductOrderAttributeValueChangeNotificationNoContentCode int = 204

/*NotificationProductOrderAttributeValueChangeNotificationNoContent No Content

swagger:response notificationProductOrderAttributeValueChangeNotificationNoContent
*/
type NotificationProductOrderAttributeValueChangeNotificationNoContent struct {
}

// NewNotificationProductOrderAttributeValueChangeNotificationNoContent creates NotificationProductOrderAttributeValueChangeNotificationNoContent with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationNoContent() *NotificationProductOrderAttributeValueChangeNotificationNoContent {

	return &NotificationProductOrderAttributeValueChangeNotificationNoContent{}
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// NotificationProductOrderAttributeValueChangeNotificationBadRequestCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationBadRequest
const NotificationProductOrderAttributeValueChangeNotificationBadRequestCode int = 400

/*NotificationProductOrderAttributeValueChangeNotificationBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response notificationProductOrderAttributeValueChangeNotificationBadRequest
*/
type NotificationProductOrderAttributeValueChangeNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationBadRequest creates NotificationProductOrderAttributeValueChangeNotificationBadRequest with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationBadRequest() *NotificationProductOrderAttributeValueChangeNotificationBadRequest {

	return &NotificationProductOrderAttributeValueChangeNotificationBadRequest{}
}

// WithPayload adds the payload to the notification product order attribute value change notification bad request response
func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification bad request response
func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationUnauthorizedCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationUnauthorized
const NotificationProductOrderAttributeValueChangeNotificationUnauthorizedCode int = 401

/*NotificationProductOrderAttributeValueChangeNotificationUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response notificationProductOrderAttributeValueChangeNotificationUnauthorized
*/
type NotificationProductOrderAttributeValueChangeNotificationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationUnauthorized creates NotificationProductOrderAttributeValueChangeNotificationUnauthorized with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationUnauthorized() *NotificationProductOrderAttributeValueChangeNotificationUnauthorized {

	return &NotificationProductOrderAttributeValueChangeNotificationUnauthorized{}
}

// WithPayload adds the payload to the notification product order attribute value change notification unauthorized response
func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification unauthorized response
func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationForbiddenCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationForbidden
const NotificationProductOrderAttributeValueChangeNotificationForbiddenCode int = 403

/*NotificationProductOrderAttributeValueChangeNotificationForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response notificationProductOrderAttributeValueChangeNotificationForbidden
*/
type NotificationProductOrderAttributeValueChangeNotificationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationForbidden creates NotificationProductOrderAttributeValueChangeNotificationForbidden with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationForbidden() *NotificationProductOrderAttributeValueChangeNotificationForbidden {

	return &NotificationProductOrderAttributeValueChangeNotificationForbidden{}
}

// WithPayload adds the payload to the notification product order attribute value change notification forbidden response
func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification forbidden response
func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationNotFoundCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationNotFound
const NotificationProductOrderAttributeValueChangeNotificationNotFoundCode int = 404

/*NotificationProductOrderAttributeValueChangeNotificationNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response notificationProductOrderAttributeValueChangeNotificationNotFound
*/
type NotificationProductOrderAttributeValueChangeNotificationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationNotFound creates NotificationProductOrderAttributeValueChangeNotificationNotFound with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationNotFound() *NotificationProductOrderAttributeValueChangeNotificationNotFound {

	return &NotificationProductOrderAttributeValueChangeNotificationNotFound{}
}

// WithPayload adds the payload to the notification product order attribute value change notification not found response
func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification not found response
func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowedCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed
const NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowedCode int = 405

/*NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response notificationProductOrderAttributeValueChangeNotificationMethodNotAllowed
*/
type NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed creates NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed() *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed {

	return &NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed{}
}

// WithPayload adds the payload to the notification product order attribute value change notification method not allowed response
func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification method not allowed response
func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationRequestTimeoutCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationRequestTimeout
const NotificationProductOrderAttributeValueChangeNotificationRequestTimeoutCode int = 408

/*NotificationProductOrderAttributeValueChangeNotificationRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response notificationProductOrderAttributeValueChangeNotificationRequestTimeout
*/
type NotificationProductOrderAttributeValueChangeNotificationRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationRequestTimeout creates NotificationProductOrderAttributeValueChangeNotificationRequestTimeout with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationRequestTimeout() *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout {

	return &NotificationProductOrderAttributeValueChangeNotificationRequestTimeout{}
}

// WithPayload adds the payload to the notification product order attribute value change notification request timeout response
func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification request timeout response
func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntityCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity
const NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntityCode int = 422

/*NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity Unprocessable entity

Functional error

swagger:response notificationProductOrderAttributeValueChangeNotificationUnprocessableEntity
*/
type NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity creates NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity() *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity {

	return &NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity{}
}

// WithPayload adds the payload to the notification product order attribute value change notification unprocessable entity response
func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification unprocessable entity response
func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationInternalServerErrorCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationInternalServerError
const NotificationProductOrderAttributeValueChangeNotificationInternalServerErrorCode int = 500

/*NotificationProductOrderAttributeValueChangeNotificationInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response notificationProductOrderAttributeValueChangeNotificationInternalServerError
*/
type NotificationProductOrderAttributeValueChangeNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationInternalServerError creates NotificationProductOrderAttributeValueChangeNotificationInternalServerError with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationInternalServerError() *NotificationProductOrderAttributeValueChangeNotificationInternalServerError {

	return &NotificationProductOrderAttributeValueChangeNotificationInternalServerError{}
}

// WithPayload adds the payload to the notification product order attribute value change notification internal server error response
func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification internal server error response
func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderAttributeValueChangeNotificationServiceUnavailableCode is the HTTP code returned for type NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable
const NotificationProductOrderAttributeValueChangeNotificationServiceUnavailableCode int = 503

/*NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable Service Unavailable



swagger:response notificationProductOrderAttributeValueChangeNotificationServiceUnavailable
*/
type NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderAttributeValueChangeNotificationServiceUnavailable creates NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationServiceUnavailable() *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable {

	return &NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable{}
}

// WithPayload adds the payload to the notification product order attribute value change notification service unavailable response
func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order attribute value change notification service unavailable response
func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
