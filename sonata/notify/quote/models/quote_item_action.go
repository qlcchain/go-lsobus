// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// QuoteItemAction Quote Item Action
//
// swagger:model QuoteItemAction
type QuoteItemAction string

const (

	// QuoteItemActionINSTALL captures enum value "INSTALL"
	QuoteItemActionINSTALL QuoteItemAction = "INSTALL"

	// QuoteItemActionCHANGE captures enum value "CHANGE"
	QuoteItemActionCHANGE QuoteItemAction = "CHANGE"

	// QuoteItemActionDISCONNECT captures enum value "DISCONNECT"
	QuoteItemActionDISCONNECT QuoteItemAction = "DISCONNECT"

	// QuoteItemActionNOCHANGE captures enum value "NO_CHANGE"
	QuoteItemActionNOCHANGE QuoteItemAction = "NO_CHANGE"
)

// for schema
var quoteItemActionEnum []interface{}

func init() {
	var res []QuoteItemAction
	if err := json.Unmarshal([]byte(`["INSTALL","CHANGE","DISCONNECT","NO_CHANGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quoteItemActionEnum = append(quoteItemActionEnum, v)
	}
}

func (m QuoteItemAction) validateQuoteItemActionEnum(path, location string, value QuoteItemAction) error {
	if err := validate.Enum(path, location, value, quoteItemActionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this quote item action
func (m QuoteItemAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQuoteItemActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
