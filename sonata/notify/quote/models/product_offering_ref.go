// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProductOfferingRef A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information
//
// swagger:model ProductOfferingRef
type ProductOfferingRef struct {

	// Indicate the class (type) of product offering.
	AtReferredType string `json:"@referredType,omitempty"`

	// Reference of the product offering
	Href string `json:"href,omitempty"`

	// Unique identifier of the product offering
	// Required: true
	ID *string `json:"id"`

	// Name of the product offering.
	Name string `json:"name,omitempty"`
}

// Validate validates this product offering ref
func (m *ProductOfferingRef) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductOfferingRef) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductOfferingRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductOfferingRef) UnmarshalBinary(b []byte) error {
	var res ProductOfferingRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
