// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// QuoteItemState quote item state
//
// swagger:model QuoteItemState
type QuoteItemState string

const (

	// QuoteItemStateINPROGRESS captures enum value "IN_PROGRESS"
	QuoteItemStateINPROGRESS QuoteItemState = "IN_PROGRESS"

	// QuoteItemStateUNABLETOPROVIDE captures enum value "UNABLE_TO_PROVIDE"
	QuoteItemStateUNABLETOPROVIDE QuoteItemState = "UNABLE_TO_PROVIDE"

	// QuoteItemStateREADY captures enum value "READY"
	QuoteItemStateREADY QuoteItemState = "READY"

	// QuoteItemStateABANDONED captures enum value "ABANDONED"
	QuoteItemStateABANDONED QuoteItemState = "ABANDONED"
)

// for schema
var quoteItemStateEnum []interface{}

func init() {
	var res []QuoteItemState
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","UNABLE_TO_PROVIDE","READY","ABANDONED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quoteItemStateEnum = append(quoteItemStateEnum, v)
	}
}

func (m QuoteItemState) validateQuoteItemStateEnum(path, location string, value QuoteItemState) error {
	if err := validate.Enum(path, location, value, quoteItemStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this quote item state
func (m QuoteItemState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQuoteItemStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
