// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-virtual-lsobus/sonata/notify/quote/models"
)

// NotificationQuoteStateChangeNotificationNoContentCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationNoContent
const NotificationQuoteStateChangeNotificationNoContentCode int = 204

/*NotificationQuoteStateChangeNotificationNoContent Success

swagger:response notificationQuoteStateChangeNotificationNoContent
*/
type NotificationQuoteStateChangeNotificationNoContent struct {
}

// NewNotificationQuoteStateChangeNotificationNoContent creates NotificationQuoteStateChangeNotificationNoContent with default headers values
func NewNotificationQuoteStateChangeNotificationNoContent() *NotificationQuoteStateChangeNotificationNoContent {

	return &NotificationQuoteStateChangeNotificationNoContent{}
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// NotificationQuoteStateChangeNotificationBadRequestCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationBadRequest
const NotificationQuoteStateChangeNotificationBadRequestCode int = 400

/*NotificationQuoteStateChangeNotificationBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response notificationQuoteStateChangeNotificationBadRequest
*/
type NotificationQuoteStateChangeNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationBadRequest creates NotificationQuoteStateChangeNotificationBadRequest with default headers values
func NewNotificationQuoteStateChangeNotificationBadRequest() *NotificationQuoteStateChangeNotificationBadRequest {

	return &NotificationQuoteStateChangeNotificationBadRequest{}
}

// WithPayload adds the payload to the notification quote state change notification bad request response
func (o *NotificationQuoteStateChangeNotificationBadRequest) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification bad request response
func (o *NotificationQuoteStateChangeNotificationBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationUnauthorizedCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationUnauthorized
const NotificationQuoteStateChangeNotificationUnauthorizedCode int = 401

/*NotificationQuoteStateChangeNotificationUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response notificationQuoteStateChangeNotificationUnauthorized
*/
type NotificationQuoteStateChangeNotificationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationUnauthorized creates NotificationQuoteStateChangeNotificationUnauthorized with default headers values
func NewNotificationQuoteStateChangeNotificationUnauthorized() *NotificationQuoteStateChangeNotificationUnauthorized {

	return &NotificationQuoteStateChangeNotificationUnauthorized{}
}

// WithPayload adds the payload to the notification quote state change notification unauthorized response
func (o *NotificationQuoteStateChangeNotificationUnauthorized) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification unauthorized response
func (o *NotificationQuoteStateChangeNotificationUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationForbiddenCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationForbidden
const NotificationQuoteStateChangeNotificationForbiddenCode int = 403

/*NotificationQuoteStateChangeNotificationForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response notificationQuoteStateChangeNotificationForbidden
*/
type NotificationQuoteStateChangeNotificationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationForbidden creates NotificationQuoteStateChangeNotificationForbidden with default headers values
func NewNotificationQuoteStateChangeNotificationForbidden() *NotificationQuoteStateChangeNotificationForbidden {

	return &NotificationQuoteStateChangeNotificationForbidden{}
}

// WithPayload adds the payload to the notification quote state change notification forbidden response
func (o *NotificationQuoteStateChangeNotificationForbidden) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification forbidden response
func (o *NotificationQuoteStateChangeNotificationForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationNotFoundCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationNotFound
const NotificationQuoteStateChangeNotificationNotFoundCode int = 404

/*NotificationQuoteStateChangeNotificationNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response notificationQuoteStateChangeNotificationNotFound
*/
type NotificationQuoteStateChangeNotificationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationNotFound creates NotificationQuoteStateChangeNotificationNotFound with default headers values
func NewNotificationQuoteStateChangeNotificationNotFound() *NotificationQuoteStateChangeNotificationNotFound {

	return &NotificationQuoteStateChangeNotificationNotFound{}
}

// WithPayload adds the payload to the notification quote state change notification not found response
func (o *NotificationQuoteStateChangeNotificationNotFound) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification not found response
func (o *NotificationQuoteStateChangeNotificationNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationMethodNotAllowedCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationMethodNotAllowed
const NotificationQuoteStateChangeNotificationMethodNotAllowedCode int = 405

/*NotificationQuoteStateChangeNotificationMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response notificationQuoteStateChangeNotificationMethodNotAllowed
*/
type NotificationQuoteStateChangeNotificationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationMethodNotAllowed creates NotificationQuoteStateChangeNotificationMethodNotAllowed with default headers values
func NewNotificationQuoteStateChangeNotificationMethodNotAllowed() *NotificationQuoteStateChangeNotificationMethodNotAllowed {

	return &NotificationQuoteStateChangeNotificationMethodNotAllowed{}
}

// WithPayload adds the payload to the notification quote state change notification method not allowed response
func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification method not allowed response
func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationUnprocessableEntityCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationUnprocessableEntity
const NotificationQuoteStateChangeNotificationUnprocessableEntityCode int = 422

/*NotificationQuoteStateChangeNotificationUnprocessableEntity Unprocessable entity

Functional error

swagger:response notificationQuoteStateChangeNotificationUnprocessableEntity
*/
type NotificationQuoteStateChangeNotificationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationUnprocessableEntity creates NotificationQuoteStateChangeNotificationUnprocessableEntity with default headers values
func NewNotificationQuoteStateChangeNotificationUnprocessableEntity() *NotificationQuoteStateChangeNotificationUnprocessableEntity {

	return &NotificationQuoteStateChangeNotificationUnprocessableEntity{}
}

// WithPayload adds the payload to the notification quote state change notification unprocessable entity response
func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification unprocessable entity response
func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationInternalServerErrorCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationInternalServerError
const NotificationQuoteStateChangeNotificationInternalServerErrorCode int = 500

/*NotificationQuoteStateChangeNotificationInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response notificationQuoteStateChangeNotificationInternalServerError
*/
type NotificationQuoteStateChangeNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationInternalServerError creates NotificationQuoteStateChangeNotificationInternalServerError with default headers values
func NewNotificationQuoteStateChangeNotificationInternalServerError() *NotificationQuoteStateChangeNotificationInternalServerError {

	return &NotificationQuoteStateChangeNotificationInternalServerError{}
}

// WithPayload adds the payload to the notification quote state change notification internal server error response
func (o *NotificationQuoteStateChangeNotificationInternalServerError) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification internal server error response
func (o *NotificationQuoteStateChangeNotificationInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationQuoteStateChangeNotificationServiceUnavailableCode is the HTTP code returned for type NotificationQuoteStateChangeNotificationServiceUnavailable
const NotificationQuoteStateChangeNotificationServiceUnavailableCode int = 503

/*NotificationQuoteStateChangeNotificationServiceUnavailable Service Unavailable



swagger:response notificationQuoteStateChangeNotificationServiceUnavailable
*/
type NotificationQuoteStateChangeNotificationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationQuoteStateChangeNotificationServiceUnavailable creates NotificationQuoteStateChangeNotificationServiceUnavailable with default headers values
func NewNotificationQuoteStateChangeNotificationServiceUnavailable() *NotificationQuoteStateChangeNotificationServiceUnavailable {

	return &NotificationQuoteStateChangeNotificationServiceUnavailable{}
}

// WithPayload adds the payload to the notification quote state change notification service unavailable response
func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *NotificationQuoteStateChangeNotificationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification quote state change notification service unavailable response
func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
