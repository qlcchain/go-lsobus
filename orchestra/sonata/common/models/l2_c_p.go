// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// L2CP l2 c p
//
// swagger:model l2CP
type L2CP string

const (

	// L2CPCTA captures enum value "CTA"
	L2CPCTA L2CP = "CTA"

	// L2CPCTB captures enum value "CTB"
	L2CPCTB L2CP = "CTB"

	// L2CPCTB2 captures enum value "CTB2"
	L2CPCTB2 L2CP = "CTB2"
)

// for schema
var l2CPEnum []interface{}

func init() {
	var res []L2CP
	if err := json.Unmarshal([]byte(`["CTA","CTB","CTB2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		l2CPEnum = append(l2CPEnum, v)
	}
}

func (m L2CP) validateL2CPEnum(path, location string, value L2CP) error {
	if err := validate.Enum(path, location, value, l2CPEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this l2 c p
func (m L2CP) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateL2CPEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
