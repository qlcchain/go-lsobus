// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChangelQuoteStateRequest Structure used to request quote cancellation/rejection
//
// swagger:model ChangelQuoteStateRequest
type ChangelQuoteStateRequest struct {

	// External Id of the quote (buyer quote id). If provided seller will check consistence.
	ExternalID string `json:"externalId,omitempty"`

	// id of the quote to be cancelled
	// Required: true
	ID *string `json:"id"`

	// Cancellation reason
	// Required: true
	QuoteChangeStateReason *string `json:"quoteChangeStateReason"`

	// state
	// Required: true
	State QuoteChangeState `json:"state"`
}

// Validate validates this changel quote state request
func (m *ChangelQuoteStateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuoteChangeStateReason(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChangelQuoteStateRequest) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *ChangelQuoteStateRequest) validateQuoteChangeStateReason(formats strfmt.Registry) error {

	if err := validate.Required("quoteChangeStateReason", "body", m.QuoteChangeStateReason); err != nil {
		return err
	}

	return nil
}

func (m *ChangelQuoteStateRequest) validateState(formats strfmt.Registry) error {

	if err := m.State.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("state")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ChangelQuoteStateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangelQuoteStateRequest) UnmarshalBinary(b []byte) error {
	var res ChangelQuoteStateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
