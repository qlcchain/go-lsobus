// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProductActionType Action to be performed on the product
//
// swagger:model ProductActionType
type ProductActionType string

const (

	// ProductActionTypeINSTALL captures enum value "INSTALL"
	ProductActionTypeINSTALL ProductActionType = "INSTALL"

	// ProductActionTypeCHANGE captures enum value "CHANGE"
	ProductActionTypeCHANGE ProductActionType = "CHANGE"

	// ProductActionTypeDISCONNECT captures enum value "DISCONNECT"
	ProductActionTypeDISCONNECT ProductActionType = "DISCONNECT"

	// ProductActionTypeNOCHANGE captures enum value "NO_CHANGE"
	ProductActionTypeNOCHANGE ProductActionType = "NO_CHANGE"
)

// for schema
var productActionTypeEnum []interface{}

func init() {
	var res []ProductActionType
	if err := json.Unmarshal([]byte(`["INSTALL","CHANGE","DISCONNECT","NO_CHANGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		productActionTypeEnum = append(productActionTypeEnum, v)
	}
}

func (m ProductActionType) validateProductActionTypeEnum(path, location string, value ProductActionType) error {
	if err := validate.Enum(path, location, value, productActionTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this product action type
func (m ProductActionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProductActionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
