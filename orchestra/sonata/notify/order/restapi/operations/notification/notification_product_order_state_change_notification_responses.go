// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-lsobus/orchestra/sonata/notify/order/models"
)

// NotificationProductOrderStateChangeNotificationNoContentCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationNoContent
const NotificationProductOrderStateChangeNotificationNoContentCode int = 204

/*NotificationProductOrderStateChangeNotificationNoContent No Content

swagger:response notificationProductOrderStateChangeNotificationNoContent
*/
type NotificationProductOrderStateChangeNotificationNoContent struct {
}

// NewNotificationProductOrderStateChangeNotificationNoContent creates NotificationProductOrderStateChangeNotificationNoContent with default headers values
func NewNotificationProductOrderStateChangeNotificationNoContent() *NotificationProductOrderStateChangeNotificationNoContent {

	return &NotificationProductOrderStateChangeNotificationNoContent{}
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// NotificationProductOrderStateChangeNotificationBadRequestCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationBadRequest
const NotificationProductOrderStateChangeNotificationBadRequestCode int = 400

/*NotificationProductOrderStateChangeNotificationBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response notificationProductOrderStateChangeNotificationBadRequest
*/
type NotificationProductOrderStateChangeNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationBadRequest creates NotificationProductOrderStateChangeNotificationBadRequest with default headers values
func NewNotificationProductOrderStateChangeNotificationBadRequest() *NotificationProductOrderStateChangeNotificationBadRequest {

	return &NotificationProductOrderStateChangeNotificationBadRequest{}
}

// WithPayload adds the payload to the notification product order state change notification bad request response
func (o *NotificationProductOrderStateChangeNotificationBadRequest) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification bad request response
func (o *NotificationProductOrderStateChangeNotificationBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationUnauthorizedCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationUnauthorized
const NotificationProductOrderStateChangeNotificationUnauthorizedCode int = 401

/*NotificationProductOrderStateChangeNotificationUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response notificationProductOrderStateChangeNotificationUnauthorized
*/
type NotificationProductOrderStateChangeNotificationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationUnauthorized creates NotificationProductOrderStateChangeNotificationUnauthorized with default headers values
func NewNotificationProductOrderStateChangeNotificationUnauthorized() *NotificationProductOrderStateChangeNotificationUnauthorized {

	return &NotificationProductOrderStateChangeNotificationUnauthorized{}
}

// WithPayload adds the payload to the notification product order state change notification unauthorized response
func (o *NotificationProductOrderStateChangeNotificationUnauthorized) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification unauthorized response
func (o *NotificationProductOrderStateChangeNotificationUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationForbiddenCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationForbidden
const NotificationProductOrderStateChangeNotificationForbiddenCode int = 403

/*NotificationProductOrderStateChangeNotificationForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response notificationProductOrderStateChangeNotificationForbidden
*/
type NotificationProductOrderStateChangeNotificationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationForbidden creates NotificationProductOrderStateChangeNotificationForbidden with default headers values
func NewNotificationProductOrderStateChangeNotificationForbidden() *NotificationProductOrderStateChangeNotificationForbidden {

	return &NotificationProductOrderStateChangeNotificationForbidden{}
}

// WithPayload adds the payload to the notification product order state change notification forbidden response
func (o *NotificationProductOrderStateChangeNotificationForbidden) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification forbidden response
func (o *NotificationProductOrderStateChangeNotificationForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationNotFoundCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationNotFound
const NotificationProductOrderStateChangeNotificationNotFoundCode int = 404

/*NotificationProductOrderStateChangeNotificationNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response notificationProductOrderStateChangeNotificationNotFound
*/
type NotificationProductOrderStateChangeNotificationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationNotFound creates NotificationProductOrderStateChangeNotificationNotFound with default headers values
func NewNotificationProductOrderStateChangeNotificationNotFound() *NotificationProductOrderStateChangeNotificationNotFound {

	return &NotificationProductOrderStateChangeNotificationNotFound{}
}

// WithPayload adds the payload to the notification product order state change notification not found response
func (o *NotificationProductOrderStateChangeNotificationNotFound) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification not found response
func (o *NotificationProductOrderStateChangeNotificationNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationMethodNotAllowedCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationMethodNotAllowed
const NotificationProductOrderStateChangeNotificationMethodNotAllowedCode int = 405

/*NotificationProductOrderStateChangeNotificationMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response notificationProductOrderStateChangeNotificationMethodNotAllowed
*/
type NotificationProductOrderStateChangeNotificationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationMethodNotAllowed creates NotificationProductOrderStateChangeNotificationMethodNotAllowed with default headers values
func NewNotificationProductOrderStateChangeNotificationMethodNotAllowed() *NotificationProductOrderStateChangeNotificationMethodNotAllowed {

	return &NotificationProductOrderStateChangeNotificationMethodNotAllowed{}
}

// WithPayload adds the payload to the notification product order state change notification method not allowed response
func (o *NotificationProductOrderStateChangeNotificationMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification method not allowed response
func (o *NotificationProductOrderStateChangeNotificationMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationRequestTimeoutCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationRequestTimeout
const NotificationProductOrderStateChangeNotificationRequestTimeoutCode int = 408

/*NotificationProductOrderStateChangeNotificationRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response notificationProductOrderStateChangeNotificationRequestTimeout
*/
type NotificationProductOrderStateChangeNotificationRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationRequestTimeout creates NotificationProductOrderStateChangeNotificationRequestTimeout with default headers values
func NewNotificationProductOrderStateChangeNotificationRequestTimeout() *NotificationProductOrderStateChangeNotificationRequestTimeout {

	return &NotificationProductOrderStateChangeNotificationRequestTimeout{}
}

// WithPayload adds the payload to the notification product order state change notification request timeout response
func (o *NotificationProductOrderStateChangeNotificationRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification request timeout response
func (o *NotificationProductOrderStateChangeNotificationRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationUnprocessableEntityCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationUnprocessableEntity
const NotificationProductOrderStateChangeNotificationUnprocessableEntityCode int = 422

/*NotificationProductOrderStateChangeNotificationUnprocessableEntity Unprocessable entity

Functional error

swagger:response notificationProductOrderStateChangeNotificationUnprocessableEntity
*/
type NotificationProductOrderStateChangeNotificationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationUnprocessableEntity creates NotificationProductOrderStateChangeNotificationUnprocessableEntity with default headers values
func NewNotificationProductOrderStateChangeNotificationUnprocessableEntity() *NotificationProductOrderStateChangeNotificationUnprocessableEntity {

	return &NotificationProductOrderStateChangeNotificationUnprocessableEntity{}
}

// WithPayload adds the payload to the notification product order state change notification unprocessable entity response
func (o *NotificationProductOrderStateChangeNotificationUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification unprocessable entity response
func (o *NotificationProductOrderStateChangeNotificationUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationInternalServerErrorCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationInternalServerError
const NotificationProductOrderStateChangeNotificationInternalServerErrorCode int = 500

/*NotificationProductOrderStateChangeNotificationInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response notificationProductOrderStateChangeNotificationInternalServerError
*/
type NotificationProductOrderStateChangeNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationInternalServerError creates NotificationProductOrderStateChangeNotificationInternalServerError with default headers values
func NewNotificationProductOrderStateChangeNotificationInternalServerError() *NotificationProductOrderStateChangeNotificationInternalServerError {

	return &NotificationProductOrderStateChangeNotificationInternalServerError{}
}

// WithPayload adds the payload to the notification product order state change notification internal server error response
func (o *NotificationProductOrderStateChangeNotificationInternalServerError) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification internal server error response
func (o *NotificationProductOrderStateChangeNotificationInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOrderStateChangeNotificationServiceUnavailableCode is the HTTP code returned for type NotificationProductOrderStateChangeNotificationServiceUnavailable
const NotificationProductOrderStateChangeNotificationServiceUnavailableCode int = 503

/*NotificationProductOrderStateChangeNotificationServiceUnavailable Service Unavailable



swagger:response notificationProductOrderStateChangeNotificationServiceUnavailable
*/
type NotificationProductOrderStateChangeNotificationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOrderStateChangeNotificationServiceUnavailable creates NotificationProductOrderStateChangeNotificationServiceUnavailable with default headers values
func NewNotificationProductOrderStateChangeNotificationServiceUnavailable() *NotificationProductOrderStateChangeNotificationServiceUnavailable {

	return &NotificationProductOrderStateChangeNotificationServiceUnavailable{}
}

// WithPayload adds the payload to the notification product order state change notification service unavailable response
func (o *NotificationProductOrderStateChangeNotificationServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOrderStateChangeNotificationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product order state change notification service unavailable response
func (o *NotificationProductOrderStateChangeNotificationServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOrderStateChangeNotificationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
