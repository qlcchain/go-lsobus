// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderMessage An optional array of messages associated with the Order
//
// swagger:model OrderMessage
type OrderMessage struct {

	// The code associated with the Message
	Code string `json:"code,omitempty"`

	// Indicates whether the Buyer must submit an updated Order to resolve the Error/Jeopardy condition.
	CorrectionRequired bool `json:"correctionRequired,omitempty"`

	// The field/attribute on the Order associated with message
	Field string `json:"field,omitempty"`

	// A description of the error condition or information to be conveyed to the Buyer
	// Required: true
	MessageInformation *string `json:"messageInformation"`

	// severity
	// Required: true
	Severity Severity `json:"severity"`
}

// Validate validates this order message
func (m *OrderMessage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMessageInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderMessage) validateMessageInformation(formats strfmt.Registry) error {

	if err := validate.Required("messageInformation", "body", m.MessageInformation); err != nil {
		return err
	}

	return nil
}

func (m *OrderMessage) validateSeverity(formats strfmt.Registry) error {

	if err := m.Severity.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("severity")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrderMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderMessage) UnmarshalBinary(b []byte) error {
	var res OrderMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
