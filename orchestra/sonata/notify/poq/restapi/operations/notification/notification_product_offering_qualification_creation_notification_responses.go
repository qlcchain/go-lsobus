// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-lsobus/orchestra/sonata/notify/poq/models"
)

// NotificationProductOfferingQualificationCreationNotificationNoContentCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationNoContent
const NotificationProductOfferingQualificationCreationNotificationNoContentCode int = 204

/*NotificationProductOfferingQualificationCreationNotificationNoContent No Content

swagger:response notificationProductOfferingQualificationCreationNotificationNoContent
*/
type NotificationProductOfferingQualificationCreationNotificationNoContent struct {
}

// NewNotificationProductOfferingQualificationCreationNotificationNoContent creates NotificationProductOfferingQualificationCreationNotificationNoContent with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationNoContent() *NotificationProductOfferingQualificationCreationNotificationNoContent {

	return &NotificationProductOfferingQualificationCreationNotificationNoContent{}
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// NotificationProductOfferingQualificationCreationNotificationBadRequestCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationBadRequest
const NotificationProductOfferingQualificationCreationNotificationBadRequestCode int = 400

/*NotificationProductOfferingQualificationCreationNotificationBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response notificationProductOfferingQualificationCreationNotificationBadRequest
*/
type NotificationProductOfferingQualificationCreationNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationBadRequest creates NotificationProductOfferingQualificationCreationNotificationBadRequest with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationBadRequest() *NotificationProductOfferingQualificationCreationNotificationBadRequest {

	return &NotificationProductOfferingQualificationCreationNotificationBadRequest{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification bad request response
func (o *NotificationProductOfferingQualificationCreationNotificationBadRequest) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification bad request response
func (o *NotificationProductOfferingQualificationCreationNotificationBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationUnauthorizedCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationUnauthorized
const NotificationProductOfferingQualificationCreationNotificationUnauthorizedCode int = 401

/*NotificationProductOfferingQualificationCreationNotificationUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response notificationProductOfferingQualificationCreationNotificationUnauthorized
*/
type NotificationProductOfferingQualificationCreationNotificationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationUnauthorized creates NotificationProductOfferingQualificationCreationNotificationUnauthorized with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationUnauthorized() *NotificationProductOfferingQualificationCreationNotificationUnauthorized {

	return &NotificationProductOfferingQualificationCreationNotificationUnauthorized{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification unauthorized response
func (o *NotificationProductOfferingQualificationCreationNotificationUnauthorized) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification unauthorized response
func (o *NotificationProductOfferingQualificationCreationNotificationUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationForbiddenCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationForbidden
const NotificationProductOfferingQualificationCreationNotificationForbiddenCode int = 403

/*NotificationProductOfferingQualificationCreationNotificationForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response notificationProductOfferingQualificationCreationNotificationForbidden
*/
type NotificationProductOfferingQualificationCreationNotificationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationForbidden creates NotificationProductOfferingQualificationCreationNotificationForbidden with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationForbidden() *NotificationProductOfferingQualificationCreationNotificationForbidden {

	return &NotificationProductOfferingQualificationCreationNotificationForbidden{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification forbidden response
func (o *NotificationProductOfferingQualificationCreationNotificationForbidden) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification forbidden response
func (o *NotificationProductOfferingQualificationCreationNotificationForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationNotFoundCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationNotFound
const NotificationProductOfferingQualificationCreationNotificationNotFoundCode int = 404

/*NotificationProductOfferingQualificationCreationNotificationNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response notificationProductOfferingQualificationCreationNotificationNotFound
*/
type NotificationProductOfferingQualificationCreationNotificationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationNotFound creates NotificationProductOfferingQualificationCreationNotificationNotFound with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationNotFound() *NotificationProductOfferingQualificationCreationNotificationNotFound {

	return &NotificationProductOfferingQualificationCreationNotificationNotFound{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification not found response
func (o *NotificationProductOfferingQualificationCreationNotificationNotFound) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification not found response
func (o *NotificationProductOfferingQualificationCreationNotificationNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationRequestTimeoutCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationRequestTimeout
const NotificationProductOfferingQualificationCreationNotificationRequestTimeoutCode int = 408

/*NotificationProductOfferingQualificationCreationNotificationRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response notificationProductOfferingQualificationCreationNotificationRequestTimeout
*/
type NotificationProductOfferingQualificationCreationNotificationRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationRequestTimeout creates NotificationProductOfferingQualificationCreationNotificationRequestTimeout with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationRequestTimeout() *NotificationProductOfferingQualificationCreationNotificationRequestTimeout {

	return &NotificationProductOfferingQualificationCreationNotificationRequestTimeout{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification request timeout response
func (o *NotificationProductOfferingQualificationCreationNotificationRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification request timeout response
func (o *NotificationProductOfferingQualificationCreationNotificationRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationUnprocessableEntityCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity
const NotificationProductOfferingQualificationCreationNotificationUnprocessableEntityCode int = 422

/*NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity Unprocessable entity

Functional error

swagger:response notificationProductOfferingQualificationCreationNotificationUnprocessableEntity
*/
type NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationUnprocessableEntity creates NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationUnprocessableEntity() *NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity {

	return &NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification unprocessable entity response
func (o *NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification unprocessable entity response
func (o *NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NotificationProductOfferingQualificationCreationNotificationServiceUnavailableCode is the HTTP code returned for type NotificationProductOfferingQualificationCreationNotificationServiceUnavailable
const NotificationProductOfferingQualificationCreationNotificationServiceUnavailableCode int = 503

/*NotificationProductOfferingQualificationCreationNotificationServiceUnavailable Service Unavailable



swagger:response notificationProductOfferingQualificationCreationNotificationServiceUnavailable
*/
type NotificationProductOfferingQualificationCreationNotificationServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewNotificationProductOfferingQualificationCreationNotificationServiceUnavailable creates NotificationProductOfferingQualificationCreationNotificationServiceUnavailable with default headers values
func NewNotificationProductOfferingQualificationCreationNotificationServiceUnavailable() *NotificationProductOfferingQualificationCreationNotificationServiceUnavailable {

	return &NotificationProductOfferingQualificationCreationNotificationServiceUnavailable{}
}

// WithPayload adds the payload to the notification product offering qualification creation notification service unavailable response
func (o *NotificationProductOfferingQualificationCreationNotificationServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *NotificationProductOfferingQualificationCreationNotificationServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the notification product offering qualification creation notification service unavailable response
func (o *NotificationProductOfferingQualificationCreationNotificationServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NotificationProductOfferingQualificationCreationNotificationServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
