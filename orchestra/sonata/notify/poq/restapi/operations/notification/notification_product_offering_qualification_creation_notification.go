// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// NotificationProductOfferingQualificationCreationNotificationHandlerFunc turns a function with the right signature into a notification product offering qualification creation notification handler
type NotificationProductOfferingQualificationCreationNotificationHandlerFunc func(NotificationProductOfferingQualificationCreationNotificationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NotificationProductOfferingQualificationCreationNotificationHandlerFunc) Handle(params NotificationProductOfferingQualificationCreationNotificationParams) middleware.Responder {
	return fn(params)
}

// NotificationProductOfferingQualificationCreationNotificationHandler interface for that can handle valid notification product offering qualification creation notification params
type NotificationProductOfferingQualificationCreationNotificationHandler interface {
	Handle(NotificationProductOfferingQualificationCreationNotificationParams) middleware.Responder
}

// NewNotificationProductOfferingQualificationCreationNotification creates a new http.Handler for the notification product offering qualification creation notification operation
func NewNotificationProductOfferingQualificationCreationNotification(ctx *middleware.Context, handler NotificationProductOfferingQualificationCreationNotificationHandler) *NotificationProductOfferingQualificationCreationNotification {
	return &NotificationProductOfferingQualificationCreationNotification{Context: ctx, Handler: handler}
}

/*NotificationProductOfferingQualificationCreationNotification swagger:route POST /notification/productOfferingQualificationCreationNotification Notification notificationProductOfferingQualificationCreationNotification

Product Offering Qualification Creation Notification structure

Product Offering Qualification Creation Notification structure definition

*/
type NotificationProductOfferingQualificationCreationNotification struct {
	Context *middleware.Context
	Handler NotificationProductOfferingQualificationCreationNotificationHandler
}

func (o *NotificationProductOfferingQualificationCreationNotification) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNotificationProductOfferingQualificationCreationNotificationParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
