// Code generated by go-swagger; DO NOT EDIT.

package cancel_product_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-lsobus/orchestra/sonata/order/models"
)

// NewCancelProductOrderCreateParams creates a new CancelProductOrderCreateParams object
// with the default values initialized.
func NewCancelProductOrderCreateParams() *CancelProductOrderCreateParams {
	var ()
	return &CancelProductOrderCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCancelProductOrderCreateParamsWithTimeout creates a new CancelProductOrderCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCancelProductOrderCreateParamsWithTimeout(timeout time.Duration) *CancelProductOrderCreateParams {
	var ()
	return &CancelProductOrderCreateParams{

		timeout: timeout,
	}
}

// NewCancelProductOrderCreateParamsWithContext creates a new CancelProductOrderCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewCancelProductOrderCreateParamsWithContext(ctx context.Context) *CancelProductOrderCreateParams {
	var ()
	return &CancelProductOrderCreateParams{

		Context: ctx,
	}
}

// NewCancelProductOrderCreateParamsWithHTTPClient creates a new CancelProductOrderCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCancelProductOrderCreateParamsWithHTTPClient(client *http.Client) *CancelProductOrderCreateParams {
	var ()
	return &CancelProductOrderCreateParams{
		HTTPClient: client,
	}
}

/*CancelProductOrderCreateParams contains all the parameters to send to the API endpoint
for the cancel product order create operation typically these are written to a http.Request
*/
type CancelProductOrderCreateParams struct {

	/*CancelProductOrder*/
	CancelProductOrder *models.CancelProductOrderCreate

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the cancel product order create params
func (o *CancelProductOrderCreateParams) WithTimeout(timeout time.Duration) *CancelProductOrderCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cancel product order create params
func (o *CancelProductOrderCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cancel product order create params
func (o *CancelProductOrderCreateParams) WithContext(ctx context.Context) *CancelProductOrderCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cancel product order create params
func (o *CancelProductOrderCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cancel product order create params
func (o *CancelProductOrderCreateParams) WithHTTPClient(client *http.Client) *CancelProductOrderCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cancel product order create params
func (o *CancelProductOrderCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCancelProductOrder adds the cancelProductOrder to the cancel product order create params
func (o *CancelProductOrderCreateParams) WithCancelProductOrder(cancelProductOrder *models.CancelProductOrderCreate) *CancelProductOrderCreateParams {
	o.SetCancelProductOrder(cancelProductOrder)
	return o
}

// SetCancelProductOrder adds the cancelProductOrder to the cancel product order create params
func (o *CancelProductOrderCreateParams) SetCancelProductOrder(cancelProductOrder *models.CancelProductOrderCreate) {
	o.CancelProductOrder = cancelProductOrder
}

// WriteToRequest writes these params to a swagger request
func (o *CancelProductOrderCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CancelProductOrder != nil {
		if err := r.SetBodyParam(o.CancelProductOrder); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
